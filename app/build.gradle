apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'testdroid'

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

	lintOptions {
          abortOnError false
      }

    compileSdkVersion 29
    defaultConfig {
        applicationId "info.guardianproject.keanuapp"
        minSdkVersion 21
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    allprojects {
        repositories {
            maven { url = 'https://jitpack.io' }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/proguard'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/androidx.exifinterface_exifinterface.version'

    // both libs/ and 'net.zetetic:android-database-sqlcipher:3.5.4@aar' contain these:

        pickFirst 'lib/armeabi-v7a/libsqlcipher.so'
        pickFirst 'lib/arm64-v8a/libsqlcipher.so'
        pickFirst 'lib/x86/libsqlcipher.so'
        pickFirst 'lib/x86_64/libsqlcipher.so'
    }


    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Specifies the flavor dimensions you want to use. The order in which you
    // list each dimension determines its priority, from highest to lowest,
    // when Gradle merges variant sources and configurations. You must assign
    // each product flavor you configure to one of the flavor dimensions.

    flavorDimensions "release"

    productFlavors {


        primary {// Assigns this product flavor to the "mode" flavor dimension.
            dimension "release"
            versionCode 410000
            versionName "0.0.4.10"
            archivesBaseName = "KeanuAlt-$versionName"
            applicationIdSuffix ".altbrand"
            versionNameSuffix "-altbrand"
        }

        altbrand {
            dimension = "release"
            applicationId "im.zom.messenger"
            versionCode 221002200
            versionName "2.2.1-RC-1"
            archivesBaseName = "Zom-$versionName"
        }



    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false

    }

    repositories {
        flatDir {
            dir 'libs'
        }
    }

    splits {
        abi {
            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "x86_64", "arm64-v8a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true

        }
    }

    buildToolsVersion '29.0.3'
}

dependencies {


    /************* Matrix SDK management **************/
    // use the matrix SDK as external lib
    implementation(name: 'matrix-sdk-release-0.9.35', ext: 'aar')
    implementation(name: 'matrix-sdk-core-release', ext: 'aar')
    implementation(name: 'matrix-sdk-crypto-release', ext: 'aar')
    implementation(name: 'olm-sdk-release-3.1.4', ext: 'aar')

    /*********** KeanuApp components **********/
    implementation(name: 'keanucore-0.0.1.67', ext: 'aar')
    implementation(name: 'keanumatrix-0.0.1.67', ext: 'aar')


    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'info.guardianproject.panic:panic:0.5'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'de.hdodenhof:circleimageview:2.0.0'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    implementation 'com.github.javiersantos:AppUpdater:2.7'
    implementation 'com.github.QuadFlask:colorpicker:0.0.10'


    //built in camera now!
    //https://github.com/natario1/CameraView
    implementation 'com.otaliastudios:cameraview:2.0.0-beta04'

  //  implementation 'com.stefanosiano.powerful_libraries:imageview:1.0.15' //Use this if you don't need renderscript
    implementation 'com.stefanosiano.powerful_libraries:imageview_rs:1.0.15'

    implementation (name: 'IOCipher-release', ext: 'aar')
    api 'net.zetetic:android-database-sqlcipher:3.5.9@aar'

    //*********** KeanuApp components ********** /
//    implementation project(':keanuCore')
 //   implementation project(':keanuMatrix')
    //  implementation 'info.guardianproject.keanuapp:keanuCore:+'
    // implementation 'info.guardianproject.keanuapp:keanuMatrix:+'

    //from here: https://github.com/guardianproject/proofmode
    implementation 'org.witness:android-libproofmode:0.0.4'
    implementation 'com.eternitywall:opentimestamps:0.1.14.1'


    //support for in app PDF viewing
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'

    //support for in app video playback
    implementation 'com.google.android.exoplayer:exoplayer:2.9.6'
    implementation 'org.jcodec:jcodec:0.2.5'

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.exifinterface:exifinterface:1.2.0"

    implementation 'commons-codec:commons-codec:1.10'
    implementation 'commons-io:commons-io:2.6'
    implementation 'cz.msebera.android:httpclient:4.4.1.2'

    //   implementation 'de.measite.minidns:minidns-hla:0.2.4'
    implementation 'org.minidns:minidns-hla:0.3.3'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    implementation 'com.google.protobuf:protobuf-java:3.4.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.jrummyapps:android-shell:1.0.1'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.60'

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.12.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.squareup.okio:okio:1.17.4'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core:1.3.1'
    implementation 'androidx.preference:preference:1.1.1'


    // Database
    kapt 'dk.ilios:realmfieldnameshelper:1.1.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //media
   // implementation 'com.android.support:preference-v7:28.0.0'


    implementation "androidx.exifinterface:exifinterface:1.2.0"

    implementation 'com.gsconrad:richcontentedittext:1.0.0'

    //html wysiwyg editor
    implementation 'jp.wasabeef:richeditor-android:1.2.2'

    //improved audio recorder
    implementation 'com.github.n8fr8:AudioRecorderView:228d48dbbc'

    // AirShare
    //implementation 'com.github.tladesignz:AirShare-Android:master-SNAPSHOT'
    implementation 'com.github.guardianproject:windchime-android:5313f3532a' //switch to this from airshare

    implementation 'com.google.code.gson:gson:2.8.6'
    // Emojis
    implementation 'com.vanniktech:emoji-google:0.7.0'

    //Alerter
    implementation 'com.tapadoo.android:alerter:5.1.2'

    //Crash Reports
    implementation "ch.acra:acra-mail:5.6.1"
    implementation "ch.acra:acra-dialog:5.6.1"

    //modern JSON library
    implementation('com.squareup.moshi:moshi:1.12.0')
    kapt('com.squareup.moshi:moshi-kotlin-codegen:1.11.0')

    implementation "com.github.YarikSOffice:lingver:1.3.0"
}

// Map for the version code that gives each ABI a value.
ext.abiCodes = ['armeabi-v7a':'1', 'arm64-v8a':'2', 'mips':'3', 'x86':'4', 'x86_64':'5']

import com.android.build.OutputFile

// For each APK output variant, override version code of outputs based on ABI codes
// ex) 'mips' -> 3xxx
// ex) 'x86' -> 4xxx
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def baseVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        if (baseVersionCode != null) {
            output.versionCodeOverride = Integer.valueOf(variant.versionCode) + Integer.valueOf(baseVersionCode)
        }
    }
}


testdroid {
    username '$bbusername'
    password '$bbpassword'
    deviceGroup 'gpdevices'
    mode "FULL_RUN"
    projectName "KeanuAndroid"
}

